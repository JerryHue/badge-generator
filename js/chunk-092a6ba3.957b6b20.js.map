{"version":3,"sources":["webpack:///./src/components/Code.vue","webpack:///./src/components/Code.vue?f6c3","webpack:///./src/components/Code.vue?e26e","webpack:///./src/components/TextInput.vue?6f20","webpack:///./src/components/TextInput.vue","webpack:///./src/components/TextInput.vue?b4e0","webpack:///./src/components/TextInput.vue?b18f","webpack:///./src/components/Checkbox.vue","webpack:///./src/components/Checkbox.vue?cf46","webpack:///./src/components/Checkbox.vue?2568","webpack:///./src/components/Results.vue","webpack:///./src/components/Results.vue?649b","webpack:///./src/components/Results.vue?6f49","webpack:///./src/lib.ts","webpack:///./src/components/Help.vue","webpack:///./src/components/Help.vue?d82e","webpack:///./src/components/Help.vue?e1b3","webpack:///./src/views/GenericBadges.vue","webpack:///./src/views/GenericBadges.vue?d54b","webpack:///./src/views/GenericBadges.vue?bc98"],"names":["code","name","props","type","String","required","render","class","for","slug","label","id","value","modelValue","placeholder","isRequired","disabled","$emit","$event","target","content","note","components","Markdown","Boolean","computed","this","__scopeId","checked","result","Code","stripLeadingSlash","replace","slugify","values","join","toLowerCase","message","submit","color","isLarge","logo","logoColor","Checkbox","Help","Results","TextInput","Green","methods","console","debug","args","dashBadge","genericBadge","paramBadge"],"mappings":"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","file":"js/chunk-092a6ba3.957b6b20.js","sourcesContent":["<template>\n  <pre><code>{{ code }}</code></pre>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"Code\",\n  props: {\n    code: { type: String, required: true },\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"Code\",\n  props: {\n    code: { type: String, required: true },\n  },\n});\n","import { render } from \"./Code.vue?vue&type=template&id=15413d74\"\nimport script from \"./Code.vue?vue&type=script&lang=ts\"\nexport * from \"./Code.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./TextInput.vue?vue&type=style&index=0&id=de2a2f90&scoped=true&lang=css\"","<template>\n  <div>\n    <label :for=\"slug\">\n      {{ label }}<span v-if=\"isRequired\" class=\"required\">*</span>\n    </label>\n\n    <input\n      :id=\"slug\"\n      type=\"text\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      :required=\"isRequired\"\n      :disabled=\"disabled\"\n      v-on:input=\"$emit('update:modelValue', $event.target.value)\"\n    />\n\n    <small class=\"note\" v-if=\"note\">\n      <Markdown :content=\"note\"></Markdown>\n    </small>\n  </div>\n</template>\n\n<style scoped>\nlabel {\n  padding-right: 0.5em;\n}\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport { slugify } from \"@/lib\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"TextInput\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: String, required: true },\n    placeholder: { type: String, required: false },\n    isRequired: { type: Boolean, required: false },\n    disabled: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"text\", this.label, this.modelValue);\n    },\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nimport { slugify } from \"@/lib\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"TextInput\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: String, required: true },\n    placeholder: { type: String, required: false },\n    isRequired: { type: Boolean, required: false },\n    disabled: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"text\", this.label, this.modelValue);\n    },\n  },\n});\n","import { render } from \"./TextInput.vue?vue&type=template&id=de2a2f90&scoped=true\"\nimport script from \"./TextInput.vue?vue&type=script&lang=ts\"\nexport * from \"./TextInput.vue?vue&type=script&lang=ts\"\n\nimport \"./TextInput.vue?vue&type=style&index=0&id=de2a2f90&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-de2a2f90\"\n\nexport default script","<template>\n  <div>\n    <label :for=\"slug\">\n      {{ label }}\n    </label>\n\n    <input\n      :id=\"slug\"\n      type=\"checkbox\"\n      :checked=\"modelValue\"\n      v-on:change=\"$emit('update:modelValue', $event.target.checked)\"\n    />\n\n    <small class=\"note\" v-if=\"note\">\n      <Markdown :content=\"note\"></Markdown>\n    </small>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport Markdown from \"@/components/Markdown.vue\";\nimport { slugify } from \"@/lib\";\n\nexport default defineComponent({\n  name: \"Checkbox\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"box\", this.label);\n    },\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nimport Markdown from \"@/components/Markdown.vue\";\nimport { slugify } from \"@/lib\";\n\nexport default defineComponent({\n  name: \"Checkbox\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"box\", this.label);\n    },\n  },\n});\n","import { render } from \"./Checkbox.vue?vue&type=template&id=5d484dba\"\nimport script from \"./Checkbox.vue?vue&type=script&lang=ts\"\nexport * from \"./Checkbox.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <!-- Badge generator output pane -->\n  <div class=\"app-results\">\n    <h2>Output values</h2>\n\n    <div>\n      <h3>Preview</h3>\n      <!-- Make sure to not add result on a new line otherwise it will indent and format. -->\n      <!-- Make sure to use :source since {{ result }} as inner text will fail to update on UI\n        changes. -->\n      <Markdown :content=\"result\"></Markdown>\n    </div>\n\n    <div>\n      <h3>Code</h3>\n\n      <Code :code=\"result\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport Code from \"@/components/Code.vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Results\",\n  components: {\n    Markdown,\n    Code,\n  },\n  props: {\n    result: String,\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nimport Code from \"@/components/Code.vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Results\",\n  components: {\n    Markdown,\n    Code,\n  },\n  props: {\n    result: String,\n  },\n});\n","import { render } from \"./Results.vue?vue&type=template&id=4a98d89a\"\nimport script from \"./Results.vue?vue&type=script&lang=ts\"\nexport * from \"./Results.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","/**\n * Lib helper functions for Vue app.\n */\n\nexport function stripLeadingSlash(value: string) {\n  return value.replace(/^\\/+/, \"\");\n}\n\nexport function slugify(...values: string[]) {\n  const value = values.join(\"-\");\n\n  return value\n    .replace(/^\\s+|\\s+$/g, \"\") // Trim\n    .toLowerCase()\n    .replace(/[^a-z0-9 -]/g, \"\")\n    .replace(/\\s+/g, \"-\") // Collapse whitespace\n    .replace(/-+/g, \"-\"); // Collapse dashes\n}\n","<template>\n  <div class=\"app-notes\">\n    <h2>Notes</h2>\n    <p>\n      <Markdown :content=\"message\"></Markdown>\n    </p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Help\",\n  components: {\n    Markdown,\n  },\n  props: {\n    message: String,\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Help\",\n  components: {\n    Markdown,\n  },\n  props: {\n    message: String,\n  },\n});\n","import { render } from \"./Help.vue?vue&type=template&id=167e31f7\"\nimport script from \"./Help.vue?vue&type=script&lang=ts\"\nexport * from \"./Help.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"badges container-lg\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h1>Generic badges</h1>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"app-input\">\n          <h2>Input values</h2>\n\n          <form @submit.prevent.enter=\"submit\">\n            <fieldset name=\"text\">\n              <legend>Text</legend>\n\n              <TextInput label=\"Label\" v-model=\"label\" />\n              <br />\n\n              <TextInput label=\"Message\" v-model=\"message\" isRequired />\n              <br />\n            </fieldset>\n            <br />\n\n            <fieldset name=\"appearance\">\n              <legend>Appearance</legend>\n\n              <TextInput\n                label=\"Color\"\n                v-model=\"color\"\n                note=\"Hints: `brightgreen`, `green`, `yellowgreen`, `yellow`, `orange`, `red`, `blue`, `lightgrey`, `success`, `important`, `critical`, `informational`, `inactive`, `blueviolet`, `ff69b4`, `9cf`\"\n                isRequired\n              />\n\n              <Checkbox label=\"Large\" v-model=\"isLarge\" />\n              <br />\n\n              <TextInput\n                label=\"Logo\"\n                v-model=\"logo\"\n                note=\"Supports values like `dependabot`, `discord` and `npm`. And hundreds of logos from [SimpleIcons](https://simpleicons.org/) such as `python`, `node.js` and `visual-studio-code`\"\n              />\n\n              <TextInput\n                label=\"Logo color\"\n                v-model=\"logoColor\"\n                :disabled=\"logo === ''\"\n                note=\"The badge's own color will be used unless you specify an override. Using `white` is great for readability against the dark label background.\"\n              />\n            </fieldset>\n            <br />\n\n            <fieldset name=\"links\">\n              <legend>Links</legend>\n\n              <TextInput\n                label=\"Click target\"\n                v-model=\"target\"\n                placeholder=\"e.g. https://example.com\"\n                note=\"URL or a local path like `/docs/`. This doesn't have to be set, but a button without a click destination is not so useful.\"\n              />\n            </fieldset>\n\n            <br />\n\n            <input class=\"btn\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </div>\n\n      <div class=\"col-6\">\n        <Results :result=\"result\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <Help :message=\"note\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport Checkbox from \"@/components/Checkbox.vue\";\nimport Help from \"@/components/Help.vue\";\nimport Results from \"@/components/Results.vue\";\nimport TextInput from \"@/components/TextInput.vue\";\n\nimport { genericBadge } from \"@/core/genericBadge\";\nimport { COLOR } from \"@/constants/appearance\";\n\nconst note = `\nThis form lets you create a fixed badge using arbitrary text and a link.\n\nFor example, describe a tools or platforms your repo is built on or built for running. This form takes care of encoding characters so they are safe for the badge URL.\n`;\n\nexport default defineComponent({\n  name: \"GenericBadges\",\n  components: {\n    Checkbox,\n    Help,\n    Results,\n    TextInput,\n  },\n  data() {\n    return {\n      label: \"Foo\",\n      message: \"Bar\",\n      color: COLOR.Green,\n      isLarge: false,\n      target: \"https://\",\n      logo: \"\",\n      logoColor: \"\",\n\n      result: \"_Your output will appear here_\",\n      note: note,\n    };\n  },\n  methods: {\n    submit() {\n      console.debug(\"Process inputs and render results\");\n\n      const args = [\n        this.label,\n        this.message,\n        this.color,\n        this.isLarge,\n        this.target,\n        this.logo,\n        this.logoColor,\n      ];\n      console.debug(args);\n\n      const dashBadge = genericBadge(\n          this.label,\n          this.message,\n          this.color,\n          this.isLarge,\n          this.target,\n          this.logo,\n          this.logoColor,\n          false\n        ),\n        paramBadge = genericBadge(\n          this.label,\n          this.message,\n          this.color,\n          this.isLarge,\n          this.target,\n          this.logo,\n          this.logoColor,\n          true\n        );\n\n      this.result = `\\\n_Dash badge_\n\n${dashBadge}\n\n_Query parameter badge_\n\n${paramBadge}\n      `;\n    },\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nimport Checkbox from \"@/components/Checkbox.vue\";\nimport Help from \"@/components/Help.vue\";\nimport Results from \"@/components/Results.vue\";\nimport TextInput from \"@/components/TextInput.vue\";\n\nimport { genericBadge } from \"@/core/genericBadge\";\nimport { COLOR } from \"@/constants/appearance\";\n\nconst note = `\nThis form lets you create a fixed badge using arbitrary text and a link.\n\nFor example, describe a tools or platforms your repo is built on or built for running. This form takes care of encoding characters so they are safe for the badge URL.\n`;\n\nexport default defineComponent({\n  name: \"GenericBadges\",\n  components: {\n    Checkbox,\n    Help,\n    Results,\n    TextInput,\n  },\n  data() {\n    return {\n      label: \"Foo\",\n      message: \"Bar\",\n      color: COLOR.Green,\n      isLarge: false,\n      target: \"https://\",\n      logo: \"\",\n      logoColor: \"\",\n\n      result: \"_Your output will appear here_\",\n      note: note,\n    };\n  },\n  methods: {\n    submit() {\n      console.debug(\"Process inputs and render results\");\n\n      const args = [\n        this.label,\n        this.message,\n        this.color,\n        this.isLarge,\n        this.target,\n        this.logo,\n        this.logoColor,\n      ];\n      console.debug(args);\n\n      const dashBadge = genericBadge(\n          this.label,\n          this.message,\n          this.color,\n          this.isLarge,\n          this.target,\n          this.logo,\n          this.logoColor,\n          false\n        ),\n        paramBadge = genericBadge(\n          this.label,\n          this.message,\n          this.color,\n          this.isLarge,\n          this.target,\n          this.logo,\n          this.logoColor,\n          true\n        );\n\n      this.result = `\\\n_Dash badge_\n\n${dashBadge}\n\n_Query parameter badge_\n\n${paramBadge}\n      `;\n    },\n  },\n});\n","import { render } from \"./GenericBadges.vue?vue&type=template&id=6960e31c\"\nimport script from \"./GenericBadges.vue?vue&type=script&lang=ts\"\nexport * from \"./GenericBadges.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}