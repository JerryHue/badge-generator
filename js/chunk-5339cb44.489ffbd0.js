(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5339cb44"],{"1cf6":function(e,t,n){"use strict";var l=n("7a23");function a(e,t,n,a,i,o){return Object(l["q"])(),Object(l["d"])("pre",null,[Object(l["h"])("code",null,Object(l["z"])(e.code),1)])}var i=Object(l["i"])({name:"Code",props:{code:{type:String,required:!0}}});i.render=a;t["a"]=i},2052:function(e,t,n){},2156:function(e,t,n){"use strict";n("bdd2")},"446e":function(e,t,n){"use strict";var l=n("7a23");const a=Object(l["G"])("data-v-de2a2f90");Object(l["t"])("data-v-de2a2f90");const i={key:0,class:"required"},o={key:0,class:"note"};Object(l["r"])();const s=a((e,t,n,a,s,c)=>{const r=Object(l["x"])("Markdown");return Object(l["q"])(),Object(l["d"])("div",null,[Object(l["h"])("label",{for:e.slug},[Object(l["g"])(Object(l["z"])(e.label),1),e.isRequired?(Object(l["q"])(),Object(l["d"])("span",i,"*")):Object(l["e"])("",!0)],8,["for"]),Object(l["h"])("input",{id:e.slug,type:"text",value:e.modelValue,placeholder:e.placeholder,required:e.isRequired,disabled:e.disabled,onInput:t[1]||(t[1]=t=>e.$emit("update:modelValue",t.target.value))},null,40,["id","value","placeholder","required","disabled"]),e.note?(Object(l["q"])(),Object(l["d"])("small",o,[Object(l["h"])(r,{content:e.note},null,8,["content"])])):Object(l["e"])("",!0)])});var c=n("84f8"),r=n("e6e0"),u=Object(l["i"])({name:"TextInput",components:{Markdown:r["a"]},props:{label:{type:String,required:!0},modelValue:{type:String,required:!0},placeholder:{type:String,required:!1},isRequired:{type:Boolean,required:!1},disabled:{type:Boolean,required:!1},note:{type:String,required:!1}},computed:{slug(){return Object(c["a"])("text",this.label,this.modelValue)}}});n("2156");u.render=s,u.__scopeId="data-v-de2a2f90";t["a"]=u},8169:function(e,t,n){"use strict";var l=n("7a23");const a={class:"app-results"},i=Object(l["h"])("h2",null,"Output values",-1),o=Object(l["h"])("h3",null,"Preview",-1),s=Object(l["h"])("h3",null,"Code",-1);function c(e,t,n,c,r,u){const d=Object(l["x"])("Markdown"),h=Object(l["x"])("Code");return Object(l["q"])(),Object(l["d"])("div",a,[i,Object(l["h"])("div",null,[o,Object(l["h"])(d,{content:e.result},null,8,["content"])]),Object(l["h"])("div",null,[s,Object(l["h"])(h,{code:e.result},null,8,["code"])])])}var r=n("1cf6"),u=n("e6e0"),d=Object(l["i"])({name:"Results",components:{Markdown:u["a"],Code:r["a"]},props:{result:String}});d.render=c;t["a"]=d},"84f8":function(e,t,n){"use strict";function l(e){return e.replace(/^\/+/,"")}function a(...e){const t=e.join("-");return t.replace(/^\s+|\s+$/g,"").toLowerCase().replace(/[^a-z0-9 -]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-")}n.d(t,"b",(function(){return l})),n.d(t,"a",(function(){return a}))},bdd2:function(e,t,n){},ca2c:function(e,t,n){"use strict";var l=n("7a23");const a={class:"app-notes"},i=Object(l["h"])("h2",null,"Notes",-1);function o(e,t,n,o,s,c){const r=Object(l["x"])("Markdown");return Object(l["q"])(),Object(l["d"])("div",a,[i,Object(l["h"])("p",null,[Object(l["h"])(r,{content:e.message},null,8,["content"])])])}var s=n("e6e0"),c=Object(l["i"])({name:"Help",components:{Markdown:s["a"]},props:{message:String}});c.render=o;t["a"]=c},e65e:function(e,t,n){"use strict";n("2052")},feec:function(e,t,n){"use strict";n.r(t);var l=n("7a23");const a={class:"images container-lg"},i=Object(l["h"])("div",{class:"row"},[Object(l["h"])("div",{class:"col-12"},[Object(l["h"])("h1",null,"Image"),Object(l["h"])("p",null," Add an image to your README.md file, such as your logo or a sample screenshot of your app. This is just a badge section, but displaying an image using markdown and HTML. An image is provided to make it easier to test sizing, but this image will not be used when you reuse the code elsewhere. ")])],-1),o={class:"row"},s={class:"col-6"},c={class:"app-input"},r=Object(l["h"])("h2",null,"Input values",-1),u={name:"links"},d=Object(l["h"])("legend",null,"Links",-1),h=Object(l["h"])("br",null,null,-1),b={name:"text"},p=Object(l["h"])("legend",null,"Text",-1),g=Object(l["h"])("br",null,null,-1),m=Object(l["h"])("br",null,null,-1),O={id:"appearance"},j=Object(l["h"])("legend",null,"Appearance",-1),f=Object(l["h"])("br",null,null,-1),w=Object(l["h"])("br",null,null,-1),v=Object(l["h"])("input",{class:"btn",type:"submit",value:"Submit"},null,-1),k={class:"col-6"},x={class:"row"},T={class:"col-12"};function y(e,t,n,y,V,q){const S=Object(l["x"])("TextInput"),$=Object(l["x"])("Results"),M=Object(l["x"])("Help");return Object(l["q"])(),Object(l["d"])("div",a,[i,Object(l["h"])("div",o,[Object(l["h"])("div",s,[Object(l["h"])("div",c,[r,Object(l["h"])("form",{onSubmit:t[7]||(t[7]=Object(l["F"])((...t)=>e.submit&&e.submit(...t),["prevent"]))},[Object(l["h"])("fieldset",u,[d,Object(l["h"])(S,{label:"Source",modelValue:e.imgSrc,"onUpdate:modelValue":t[1]||(t[1]=t=>e.imgSrc=t),placeholder:"e.g. /sample.png",note:"Local path or URL.",isRequired:""},null,8,["modelValue"]),Object(l["h"])(S,{label:"Click target",modelValue:e.linkTarget,"onUpdate:modelValue":t[2]||(t[2]=t=>e.linkTarget=t),placeholder:"e.g. https://example.com",note:"Local path or external URL. Such as docs/ or link to project site."},null,8,["modelValue"])]),h,Object(l["h"])("fieldset",b,[p,Object(l["h"])(S,{label:"Alt text",modelValue:e.altText,"onUpdate:modelValue":t[3]||(t[3]=t=>e.altText=t),placeholder:"e.g. Sample screenshot",note:"Fallback image text on broken link. If not set, the image path will be used"},null,8,["modelValue"]),g,Object(l["h"])(S,{label:"Title",modelValue:e.imgTitle,"onUpdate:modelValue":t[4]||(t[4]=t=>e.imgTitle=t),note:"Text to show on hover. If not set, then the alt text input's value will be used."},null,8,["modelValue"])]),m,Object(l["h"])("fieldset",O,[j,Object(l["h"])(S,{label:"Width",modelValue:e.width,"onUpdate:modelValue":t[5]||(t[5]=t=>e.width=t),placeholder:"e.g. 400",note:"Measured in pixels, but no px symbol is needed. If you set width only, then height will default to 'auto', which works well on mobile and desktop."},null,8,["modelValue"]),f,Object(l["h"])(S,{label:"Height",modelValue:e.height,"onUpdate:modelValue":t[6]||(t[6]=t=>e.height=t),placeholder:"e.g. 400",note:"Warning: You probably don't need to set height. If you set height but not width, then you might get a squashed image on mobile view."},null,8,["modelValue"])]),w,v],32)])]),Object(l["h"])("div",k,[Object(l["h"])($,{result:e.result},null,8,["result"])])]),Object(l["h"])("div",x,[Object(l["h"])("div",T,[Object(l["h"])(M,{message:e.helpMessage},null,8,["message"])])])])}var V=n("84f8"),q=n("ca2c"),S=n("8169"),$=n("446e"),M=n("7cba");function I(e,t,n,l="",a,i){const o=n?` title="${n}"`:"",s=t?` alt="${t}"`:"",c=a?` width="${a}"`:"",r=i?` height="${i}"`:"";let u=`<img src="${e}"${s}${o}${c}${r} />`;return l&&(u=`<a href="${l}">\n    ${u}\n</a>`),u}const R="<p>\n  Styling has been setup so that images in the preview pane will not\n  extend beyond the width of the preview area, even no width or a\n  large width has been set.\n</p>\n<p>\n  Tip: Pressing the <kbd>Enter</kbd> key after updating a text field\n  will also submit.\n</p>\n<p>\n  Setting <i>width</i> and <i>height</i> is optional, but this can\n  help in certain cases. For example, a screenshot or logo will be set\n  by GitHub to <i>100%</i> of the page width making it look large and\n  take up vertical space, so reduce height or width manually.\n</p>\n<p>\n  Setting height can also make sure the height of the tag is set\n  before the image loads, so it reserves the space - if the height is\n  larger than the original image though then the image will looked\n  stretched.\n</p>\n<p>\n  Warning: If you set height only to say 400, then the image in the\n  README.md will look fine on desktop but ends up looking distorted on\n  mobile.\n</p>";var L=Object(l["i"])({name:"ImageView",components:{Help:q["a"],Results:S["a"],TextInput:$["a"]},data(){return{imgSrc:"/sample.png",linkTarget:"",altText:"Sample screenshot",imgTitle:"",width:"400",height:"",result:"_Your output will appear here_",helpMessage:R}},computed:{altTextOut(){return Object(V["b"])(this.altText||this.imgSrc)},imgTitleOut(){return Object(V["b"])(this.imgTitle||this.altText)}},methods:{submit(){console.debug("Process inputs and render results");const e=I(this.imgSrc,this.altTextOut,this.imgTitleOut,this.linkTarget,this.width,this.height),t=Object(M["a"])({altText:this.altTextOut,imageTarget:this.imgSrc,linkTarget:this.linkTarget,hoverTitle:this.imgTitleOut});this.result=`_HTML image_\n\n<div align="center">\n    ${e}\n</div>\n\n\n_Markdown image_\n\n<div align="center">\n\n${t}\n\n</div>\n      `}}});n("e65e");L.render=y;t["default"]=L}}]);
//# sourceMappingURL=chunk-5339cb44.489ffbd0.js.map