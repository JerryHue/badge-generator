{"version":3,"sources":["webpack:///./src/constants/text.ts","webpack:///./src/components/Code.vue","webpack:///./src/components/Code.vue?f6c3","webpack:///./src/components/Code.vue?e26e","webpack:///./src/components/TextInput.vue?6f20","webpack:///./src/components/TextInput.vue","webpack:///./src/components/TextInput.vue?b4e0","webpack:///./src/components/TextInput.vue?b18f","webpack:///./src/components/Checkbox.vue","webpack:///./src/components/Checkbox.vue?cf46","webpack:///./src/components/Checkbox.vue?2568","webpack:///./src/components/Results.vue","webpack:///./src/components/Results.vue?649b","webpack:///./src/components/Results.vue?6f49","webpack:///./src/lib.ts","webpack:///./src/components/Results.vue?e96e","webpack:///./src/components/Help.vue","webpack:///./src/components/Help.vue?d82e","webpack:///./src/components/Help.vue?e1b3","webpack:///./src/views/GenericBadges.vue","webpack:///./src/views/GenericBadges.vue?d54b","webpack:///./src/views/GenericBadges.vue?bc98"],"names":["INITIAL_RESULT","COLOR_HELP","LOGO_HELP","LOGO_COLOR_HELP","label","asHtml","ref","class","outputCode","name","components","Checkbox","props","code","type","String","required","computed","this","htmlCode","methods","block","$refs","codeBlock","highlightElement","highlight","render","for","slug","id","value","modelValue","placeholder","isRequired","disabled","$emit","$event","target","content","note","Markdown","Boolean","__scopeId","checked","result","Code","stripLeadingSlash","replace","slugify","values","join","toLowerCase","message","submit","badgeColor","colorHelp","isLarge","logo","logoHelp","logoColor","logoColorHelp","Help","Results","TextInput","Green","console","debug","args","dashBadge","genericBadge","paramBadge"],"mappings":"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","file":"js/generic.3d8a288a.js","sourcesContent":["export const INITIAL_RESULT = \"_Your output will appear here_\";\n\nexport const COLOR_HELP =\n  \"Color keyword or hex code. Hints: `brightgreen`, `green`, `yellowgreen`, `yellow`, `orange`, `red`, `blue`, `lightgrey`, `success`, `important`, `critical`, `informational`, `inactive`, `blueviolet`, `ff69b4`, `9cf`, `2ea44f` (GitHub's green). The Shields.io API will use `blue` as a default if no color is provided.\";\n\nexport const LOGO_HELP =\n  \"Supports values like `dependabot`, `discord` and `npm`. And hundreds of logos from [SimpleIcons](https://simpleicons.org/) such as `python`, `node.js` and `visual-studio-code`\";\n\nexport const LOGO_COLOR_HELP =\n  \"Color keyword or hex code. The badge's own color will be used unless you specify an override. Using `white` is great for readability against the dark label background.\";\n","// Render Markdown as a codeblock. Apply highlighting on content changes.\n<template>\n  <div>\n    <Checkbox label=\"Show HTML\" v-model=\"asHtml\" />\n    <br />\n\n    <pre><code ref=\"codeBlock\" class=\"markdown\">{{ outputCode }}</code></pre>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport hljs from \"highlight.js\";\nimport { defineComponent } from \"vue\";\n\nimport { cleanHtml, mdToHTML } from \"@/core/markdown\";\nimport Checkbox from \"./Checkbox.vue\";\n\nexport default defineComponent({\n  name: \"Code\",\n  components: {\n    Checkbox,\n  },\n  props: {\n    code: { type: String, required: true },\n  },\n  data() {\n    return {\n      asHtml: false,\n    };\n  },\n  computed: {\n    outputCode(): String {\n      if (this.asHtml) {\n        const htmlCode = mdToHTML(this.code);\n\n        return cleanHtml(htmlCode);\n      }\n      return this.code;\n    },\n  },\n  methods: {\n    highlight() {\n      const block = this.$refs.codeBlock as HTMLElement;\n      hljs.highlightElement(block);\n    },\n  },\n  mounted() {\n    this.highlight();\n  },\n  updated() {\n    this.highlight();\n  },\n});\n</script>\n","\nimport hljs from \"highlight.js\";\nimport { defineComponent } from \"vue\";\n\nimport { cleanHtml, mdToHTML } from \"@/core/markdown\";\nimport Checkbox from \"./Checkbox.vue\";\n\nexport default defineComponent({\n  name: \"Code\",\n  components: {\n    Checkbox,\n  },\n  props: {\n    code: { type: String, required: true },\n  },\n  data() {\n    return {\n      asHtml: false,\n    };\n  },\n  computed: {\n    outputCode(): String {\n      if (this.asHtml) {\n        const htmlCode = mdToHTML(this.code);\n\n        return cleanHtml(htmlCode);\n      }\n      return this.code;\n    },\n  },\n  methods: {\n    highlight() {\n      const block = this.$refs.codeBlock as HTMLElement;\n      hljs.highlightElement(block);\n    },\n  },\n  mounted() {\n    this.highlight();\n  },\n  updated() {\n    this.highlight();\n  },\n});\n","import { render } from \"./Code.vue?vue&type=template&id=457666df\"\nimport script from \"./Code.vue?vue&type=script&lang=ts\"\nexport * from \"./Code.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./TextInput.vue?vue&type=style&index=0&id=de2a2f90&scoped=true&lang=css\"","<template>\n  <div>\n    <label :for=\"slug\">\n      {{ label }}<span v-if=\"isRequired\" class=\"required\">*</span>\n    </label>\n\n    <input\n      :id=\"slug\"\n      type=\"text\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      :required=\"isRequired\"\n      :disabled=\"disabled\"\n      v-on:input=\"$emit('update:modelValue', $event.target.value)\"\n    />\n\n    <small class=\"note\" v-if=\"note\">\n      <Markdown :content=\"note\"></Markdown>\n    </small>\n  </div>\n</template>\n\n<style scoped>\nlabel {\n  padding-right: 0.5em;\n}\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport { slugify } from \"@/lib\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"TextInput\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: String, required: true },\n    placeholder: { type: String, required: false },\n    isRequired: { type: Boolean, required: false },\n    disabled: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"text\", this.label, this.modelValue);\n    },\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nimport { slugify } from \"@/lib\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"TextInput\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: String, required: true },\n    placeholder: { type: String, required: false },\n    isRequired: { type: Boolean, required: false },\n    disabled: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"text\", this.label, this.modelValue);\n    },\n  },\n});\n","import { render } from \"./TextInput.vue?vue&type=template&id=de2a2f90&scoped=true\"\nimport script from \"./TextInput.vue?vue&type=script&lang=ts\"\nexport * from \"./TextInput.vue?vue&type=script&lang=ts\"\n\nimport \"./TextInput.vue?vue&type=style&index=0&id=de2a2f90&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-de2a2f90\"\n\nexport default script","<template>\n  <div>\n    <label :for=\"slug\">\n      {{ label }}\n    </label>\n\n    <input\n      :id=\"slug\"\n      type=\"checkbox\"\n      :checked=\"modelValue\"\n      v-on:change=\"$emit('update:modelValue', $event.target.checked)\"\n    />\n\n    <small class=\"note\" v-if=\"note\">\n      <Markdown :content=\"note\"></Markdown>\n    </small>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport Markdown from \"@/components/Markdown.vue\";\nimport { slugify } from \"@/lib\";\n\nexport default defineComponent({\n  name: \"Checkbox\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"box\", this.label);\n    },\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nimport Markdown from \"@/components/Markdown.vue\";\nimport { slugify } from \"@/lib\";\n\nexport default defineComponent({\n  name: \"Checkbox\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"box\", this.label);\n    },\n  },\n});\n","import { render } from \"./Checkbox.vue?vue&type=template&id=5d484dba\"\nimport script from \"./Checkbox.vue?vue&type=script&lang=ts\"\nexport * from \"./Checkbox.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <!-- Badge Generator output pane -->\n  <div class=\"app-results\">\n    <h2>Output values</h2>\n\n    <div>\n      <h3>Preview</h3>\n\n      <Markdown class=\"markdown-preview\" :content=\"result\"></Markdown>\n    </div>\n\n    <br />\n\n    <div>\n      <h3>Code</h3>\n\n      <Code :code=\"result\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport Code from \"@/components/Code.vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Results\",\n  components: {\n    Markdown,\n    Code,\n  },\n  props: {\n    result: { type: String, required: true },\n  },\n});\n</script>\n\n<style scoped>\n.markdown-preview {\n  padding-left: 12px;\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\n\nimport Code from \"@/components/Code.vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Results\",\n  components: {\n    Markdown,\n    Code,\n  },\n  props: {\n    result: { type: String, required: true },\n  },\n});\n","import { render } from \"./Results.vue?vue&type=template&id=58367787&scoped=true\"\nimport script from \"./Results.vue?vue&type=script&lang=ts\"\nexport * from \"./Results.vue?vue&type=script&lang=ts\"\n\nimport \"./Results.vue?vue&type=style&index=0&id=58367787&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-58367787\"\n\nexport default script","/**\n * Lib helper functions for Vue app.\n */\n\nexport function stripLeadingSlash(value: string) {\n  return value.replace(/^\\/+/, \"\");\n}\n\nexport function slugify(...values: string[]) {\n  const value = values.join(\"-\");\n\n  return value\n    .replace(/^\\s+|\\s+$/g, \"\") // Trim\n    .toLowerCase()\n    .replace(/[^a-z0-9 -]/g, \"\")\n    .replace(/\\s+/g, \"-\") // Collapse whitespace\n    .replace(/-+/g, \"-\"); // Collapse dashes\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Results.vue?vue&type=style&index=0&id=58367787&scoped=true&lang=css\"","<template>\n  <div class=\"app-notes\">\n    <h2>Notes</h2>\n    <p>\n      <Markdown :content=\"message\"></Markdown>\n    </p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Help\",\n  components: {\n    Markdown,\n  },\n  props: {\n    message: { type: String, required: true },\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Help\",\n  components: {\n    Markdown,\n  },\n  props: {\n    message: { type: String, required: true },\n  },\n});\n","import { render } from \"./Help.vue?vue&type=template&id=0031e5e4\"\nimport script from \"./Help.vue?vue&type=script&lang=ts\"\nexport * from \"./Help.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"badges container-lg\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h1>Generic badges</h1>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"app-input\">\n          <h2>Input values</h2>\n\n          <form @submit.prevent.enter=\"submit\">\n            <fieldset name=\"text\">\n              <legend>Text</legend>\n\n              <TextInput label=\"Label\" v-model=\"label\" />\n              <br />\n\n              <TextInput label=\"Message\" v-model=\"message\" isRequired />\n              <br />\n            </fieldset>\n            <br />\n\n            <fieldset name=\"display-options\">\n              <legend>Display options</legend>\n\n              <TextInput\n                label=\"Color\"\n                v-model=\"badgeColor\"\n                placeholder=\"e.g. blue\"\n                :note=\"colorHelp\"\n              />\n\n              <Checkbox label=\"Large\" v-model=\"isLarge\" />\n              <br />\n\n              <TextInput label=\"Logo\" v-model=\"logo\" :note=\"logoHelp\" />\n\n              <TextInput\n                label=\"Logo color\"\n                v-model=\"logoColor\"\n                :disabled=\"logo === ''\"\n                :note=\"logoColorHelp\"\n              />\n            </fieldset>\n            <br />\n\n            <fieldset name=\"links\">\n              <legend>Links</legend>\n\n              <TextInput\n                label=\"Click target\"\n                v-model=\"target\"\n                placeholder=\"e.g. https://example.com\"\n                note=\"URL or a local path like `/docs/`. This doesn't have to be set, but a button without a click destination is not so useful.\"\n              />\n            </fieldset>\n\n            <br />\n\n            <input class=\"btn\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </div>\n\n      <div class=\"col-6\">\n        <Results :result=\"result\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <Help :message=\"note\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport { COLOR_PRESETS } from \"@/constants/appearance\";\nimport {\n  COLOR_HELP,\n  INITIAL_RESULT,\n  LOGO_COLOR_HELP,\n  LOGO_HELP,\n} from \"@/constants/text\";\n\nimport Checkbox from \"@/components/Checkbox.vue\";\nimport Help from \"@/components/Help.vue\";\nimport Results from \"@/components/Results.vue\";\nimport TextInput from \"@/components/TextInput.vue\";\n\nimport { genericBadge } from \"@/core/genericBadge\";\n\nconst note = `\nThis form lets you create a fixed badge using arbitrary text and a link.\n\nFor example, describe a tools or platforms your repo is built on or built for running. This form takes care of encoding characters so they are safe for the badge URL.\n`;\n\nexport default defineComponent({\n  name: \"GenericBadges\",\n  components: {\n    Checkbox,\n    Help,\n    Results,\n    TextInput,\n  },\n  data() {\n    return {\n      label: \"Foo\",\n      message: \"Bar\",\n      badgeColor: COLOR_PRESETS.Green,\n      isLarge: false,\n      target: \"https://\",\n      logo: \"\",\n      logoColor: \"\",\n\n      result: INITIAL_RESULT,\n\n      note: note,\n      colorHelp: COLOR_HELP,\n      logoHelp: LOGO_HELP,\n      logoColorHelp: LOGO_COLOR_HELP,\n    };\n  },\n  methods: {\n    submit() {\n      console.debug(\"Process inputs and render results\");\n\n      const args = [\n        this.label,\n        this.message,\n        this.badgeColor,\n        this.isLarge,\n        this.target,\n        this.logo,\n        this.logoColor,\n      ];\n      console.debug(args);\n\n      const dashBadge = genericBadge(\n          this.label,\n          this.message,\n          this.badgeColor,\n          this.isLarge,\n          this.target,\n          this.logo,\n          this.logoColor,\n          false\n        ),\n        paramBadge = genericBadge(\n          this.label,\n          this.message,\n          this.badgeColor,\n          this.isLarge,\n          this.target,\n          this.logo,\n          this.logoColor,\n          true\n        );\n\n      this.result = `\\\n_Dash badge_\n\n${dashBadge}\n\n_Query parameter badge_\n\n${paramBadge}\n      `;\n    },\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nimport { COLOR_PRESETS } from \"@/constants/appearance\";\nimport {\n  COLOR_HELP,\n  INITIAL_RESULT,\n  LOGO_COLOR_HELP,\n  LOGO_HELP,\n} from \"@/constants/text\";\n\nimport Checkbox from \"@/components/Checkbox.vue\";\nimport Help from \"@/components/Help.vue\";\nimport Results from \"@/components/Results.vue\";\nimport TextInput from \"@/components/TextInput.vue\";\n\nimport { genericBadge } from \"@/core/genericBadge\";\n\nconst note = `\nThis form lets you create a fixed badge using arbitrary text and a link.\n\nFor example, describe a tools or platforms your repo is built on or built for running. This form takes care of encoding characters so they are safe for the badge URL.\n`;\n\nexport default defineComponent({\n  name: \"GenericBadges\",\n  components: {\n    Checkbox,\n    Help,\n    Results,\n    TextInput,\n  },\n  data() {\n    return {\n      label: \"Foo\",\n      message: \"Bar\",\n      badgeColor: COLOR_PRESETS.Green,\n      isLarge: false,\n      target: \"https://\",\n      logo: \"\",\n      logoColor: \"\",\n\n      result: INITIAL_RESULT,\n\n      note: note,\n      colorHelp: COLOR_HELP,\n      logoHelp: LOGO_HELP,\n      logoColorHelp: LOGO_COLOR_HELP,\n    };\n  },\n  methods: {\n    submit() {\n      console.debug(\"Process inputs and render results\");\n\n      const args = [\n        this.label,\n        this.message,\n        this.badgeColor,\n        this.isLarge,\n        this.target,\n        this.logo,\n        this.logoColor,\n      ];\n      console.debug(args);\n\n      const dashBadge = genericBadge(\n          this.label,\n          this.message,\n          this.badgeColor,\n          this.isLarge,\n          this.target,\n          this.logo,\n          this.logoColor,\n          false\n        ),\n        paramBadge = genericBadge(\n          this.label,\n          this.message,\n          this.badgeColor,\n          this.isLarge,\n          this.target,\n          this.logo,\n          this.logoColor,\n          true\n        );\n\n      this.result = `\\\n_Dash badge_\n\n${dashBadge}\n\n_Query parameter badge_\n\n${paramBadge}\n      `;\n    },\n  },\n});\n","import { render } from \"./GenericBadges.vue?vue&type=template&id=3b0a5643\"\nimport script from \"./GenericBadges.vue?vue&type=script&lang=ts\"\nexport * from \"./GenericBadges.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}