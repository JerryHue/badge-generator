{"version":3,"sources":["webpack:///./src/constants/text.ts","webpack:///./src/components/Code.vue","webpack:///./src/components/Code.vue?f6c3","webpack:///./src/components/Code.vue?e26e","webpack:///./src/components/TextInput.vue?6f20","webpack:///./src/components/TextInput.vue","webpack:///./src/components/TextInput.vue?b4e0","webpack:///./src/components/TextInput.vue?b18f","webpack:///./src/components/Checkbox.vue","webpack:///./src/components/Checkbox.vue?cf46","webpack:///./src/components/Checkbox.vue?2568","webpack:///./src/components/Results.vue","webpack:///./src/components/Results.vue?649b","webpack:///./src/components/Results.vue?6f49","webpack:///./src/lib.ts","webpack:///./src/views/Image.vue?d1fb","webpack:///./src/components/Results.vue?e96e","webpack:///./src/components/Help.vue","webpack:///./src/components/Help.vue?d82e","webpack:///./src/components/Help.vue?e1b3","webpack:///./src/views/Image.vue","webpack:///./src/constants/image.ts","webpack:///./src/core/images.ts","webpack:///./src/views/Image.vue?9df2","webpack:///./src/views/Image.vue?8d17"],"names":["INITIAL_RESULT","COLOR_HELP","LOGO_HELP","LOGO_COLOR_HELP","label","asHtml","ref","class","outputCode","name","components","Checkbox","props","code","type","String","required","computed","this","htmlCode","methods","block","$refs","codeBlock","highlightElement","highlight","render","for","slug","id","value","modelValue","placeholder","isRequired","disabled","$emit","$event","target","content","note","Markdown","Boolean","__scopeId","checked","result","Code","stripLeadingSlash","replace","slugify","values","join","toLowerCase","message","submit","imgSrc","linkTarget","altText","imgTitle","width","height","helpMessage","SCREENSHOT","mkHtmlImg","src","alt","title","htmlTitle","htmlAltText","htmlWidth","htmlHeight","htmlImg","Help","Results","TextInput","console","debug","altTextOut","imgTitleOut","mdImg","imageTarget","hoverTitle"],"mappings":"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","file":"js/image.70737f95.js","sourcesContent":["export const INITIAL_RESULT = \"_Your output will appear here_\";\n\nexport const COLOR_HELP =\n  \"Color keyword or hex code. Hints: `brightgreen`, `green`, `yellowgreen`, `yellow`, `orange`, `red`, `blue`, `lightgrey`, `success`, `important`, `critical`, `informational`, `inactive`, `blueviolet`, `ff69b4`, `9cf`, `2ea44f` (GitHub's green). The Shields.io API will use `blue` as a default if no color is provided.\";\n\nexport const LOGO_HELP =\n  \"Supports values like `dependabot`, `discord` and `npm`. And hundreds of logos from [SimpleIcons](https://simpleicons.org/) such as `python`, `node.js` and `visual-studio-code`\";\n\nexport const LOGO_COLOR_HELP =\n  \"Color keyword or hex code. The badge's own color will be used unless you specify an override. Using `white` is great for readability against the dark label background.\";\n","// Render Markdown as a codeblock. Apply highlighting on content changes.\n<template>\n  <div>\n    <Checkbox label=\"Show HTML\" v-model=\"asHtml\" />\n    <br />\n\n    <pre><code ref=\"codeBlock\" class=\"markdown\">{{ outputCode }}</code></pre>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport hljs from \"highlight.js\";\nimport { defineComponent } from \"vue\";\n\nimport { cleanHtml, mdToHTML } from \"@/core/markdown\";\nimport Checkbox from \"./Checkbox.vue\";\n\nexport default defineComponent({\n  name: \"Code\",\n  components: {\n    Checkbox,\n  },\n  props: {\n    code: { type: String, required: true },\n  },\n  data() {\n    return {\n      asHtml: false,\n    };\n  },\n  computed: {\n    outputCode(): String {\n      if (this.asHtml) {\n        const htmlCode = mdToHTML(this.code);\n\n        return cleanHtml(htmlCode);\n      }\n      return this.code;\n    },\n  },\n  methods: {\n    highlight() {\n      const block = this.$refs.codeBlock as HTMLElement;\n      hljs.highlightElement(block);\n    },\n  },\n  mounted() {\n    this.highlight();\n  },\n  updated() {\n    this.highlight();\n  },\n});\n</script>\n","\nimport hljs from \"highlight.js\";\nimport { defineComponent } from \"vue\";\n\nimport { cleanHtml, mdToHTML } from \"@/core/markdown\";\nimport Checkbox from \"./Checkbox.vue\";\n\nexport default defineComponent({\n  name: \"Code\",\n  components: {\n    Checkbox,\n  },\n  props: {\n    code: { type: String, required: true },\n  },\n  data() {\n    return {\n      asHtml: false,\n    };\n  },\n  computed: {\n    outputCode(): String {\n      if (this.asHtml) {\n        const htmlCode = mdToHTML(this.code);\n\n        return cleanHtml(htmlCode);\n      }\n      return this.code;\n    },\n  },\n  methods: {\n    highlight() {\n      const block = this.$refs.codeBlock as HTMLElement;\n      hljs.highlightElement(block);\n    },\n  },\n  mounted() {\n    this.highlight();\n  },\n  updated() {\n    this.highlight();\n  },\n});\n","import { render } from \"./Code.vue?vue&type=template&id=457666df\"\nimport script from \"./Code.vue?vue&type=script&lang=ts\"\nexport * from \"./Code.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./TextInput.vue?vue&type=style&index=0&id=de2a2f90&scoped=true&lang=css\"","<template>\n  <div>\n    <label :for=\"slug\">\n      {{ label }}<span v-if=\"isRequired\" class=\"required\">*</span>\n    </label>\n\n    <input\n      :id=\"slug\"\n      type=\"text\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      :required=\"isRequired\"\n      :disabled=\"disabled\"\n      v-on:input=\"$emit('update:modelValue', $event.target.value)\"\n    />\n\n    <small class=\"note\" v-if=\"note\">\n      <Markdown :content=\"note\"></Markdown>\n    </small>\n  </div>\n</template>\n\n<style scoped>\nlabel {\n  padding-right: 0.5em;\n}\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport { slugify } from \"@/lib\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"TextInput\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: String, required: true },\n    placeholder: { type: String, required: false },\n    isRequired: { type: Boolean, required: false },\n    disabled: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"text\", this.label, this.modelValue);\n    },\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nimport { slugify } from \"@/lib\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"TextInput\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: String, required: true },\n    placeholder: { type: String, required: false },\n    isRequired: { type: Boolean, required: false },\n    disabled: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"text\", this.label, this.modelValue);\n    },\n  },\n});\n","import { render } from \"./TextInput.vue?vue&type=template&id=de2a2f90&scoped=true\"\nimport script from \"./TextInput.vue?vue&type=script&lang=ts\"\nexport * from \"./TextInput.vue?vue&type=script&lang=ts\"\n\nimport \"./TextInput.vue?vue&type=style&index=0&id=de2a2f90&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-de2a2f90\"\n\nexport default script","<template>\n  <div>\n    <label :for=\"slug\">\n      {{ label }}\n    </label>\n\n    <input\n      :id=\"slug\"\n      type=\"checkbox\"\n      :checked=\"modelValue\"\n      v-on:change=\"$emit('update:modelValue', $event.target.checked)\"\n    />\n\n    <small class=\"note\" v-if=\"note\">\n      <Markdown :content=\"note\"></Markdown>\n    </small>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport Markdown from \"@/components/Markdown.vue\";\nimport { slugify } from \"@/lib\";\n\nexport default defineComponent({\n  name: \"Checkbox\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"box\", this.label);\n    },\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nimport Markdown from \"@/components/Markdown.vue\";\nimport { slugify } from \"@/lib\";\n\nexport default defineComponent({\n  name: \"Checkbox\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"box\", this.label);\n    },\n  },\n});\n","import { render } from \"./Checkbox.vue?vue&type=template&id=5d484dba\"\nimport script from \"./Checkbox.vue?vue&type=script&lang=ts\"\nexport * from \"./Checkbox.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <!-- Badge Generator output pane -->\n  <div class=\"app-results\">\n    <h2>Output values</h2>\n\n    <div>\n      <h3>Preview</h3>\n\n      <Markdown class=\"markdown-preview\" :content=\"result\"></Markdown>\n    </div>\n\n    <br />\n\n    <div>\n      <h3>Code</h3>\n\n      <Code :code=\"result\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport Code from \"@/components/Code.vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Results\",\n  components: {\n    Markdown,\n    Code,\n  },\n  props: {\n    result: { type: String, required: true },\n  },\n});\n</script>\n\n<style scoped>\n.markdown-preview {\n  padding-left: 12px;\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\n\nimport Code from \"@/components/Code.vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Results\",\n  components: {\n    Markdown,\n    Code,\n  },\n  props: {\n    result: { type: String, required: true },\n  },\n});\n","import { render } from \"./Results.vue?vue&type=template&id=58367787&scoped=true\"\nimport script from \"./Results.vue?vue&type=script&lang=ts\"\nexport * from \"./Results.vue?vue&type=script&lang=ts\"\n\nimport \"./Results.vue?vue&type=style&index=0&id=58367787&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-58367787\"\n\nexport default script","/**\n * Lib helper functions for Vue app.\n */\n\nexport function stripLeadingSlash(value: string) {\n  return value.replace(/^\\/+/, \"\");\n}\n\nexport function slugify(...values: string[]) {\n  const value = values.join(\"-\");\n\n  return value\n    .replace(/^\\s+|\\s+$/g, \"\") // Trim\n    .toLowerCase()\n    .replace(/[^a-z0-9 -]/g, \"\")\n    .replace(/\\s+/g, \"-\") // Collapse whitespace\n    .replace(/-+/g, \"-\"); // Collapse dashes\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Image.vue?vue&type=style&index=0&id=64016c48&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Results.vue?vue&type=style&index=0&id=58367787&scoped=true&lang=css\"","<template>\n  <div class=\"app-notes\">\n    <h2>Notes</h2>\n    <p>\n      <Markdown :content=\"message\"></Markdown>\n    </p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Help\",\n  components: {\n    Markdown,\n  },\n  props: {\n    message: { type: String, required: true },\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Help\",\n  components: {\n    Markdown,\n  },\n  props: {\n    message: { type: String, required: true },\n  },\n});\n","import { render } from \"./Help.vue?vue&type=template&id=0031e5e4\"\nimport script from \"./Help.vue?vue&type=script&lang=ts\"\nexport * from \"./Help.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"images container-lg\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h1>Image</h1>\n\n        <p>\n          Add an image to your README.md file, such as your logo or a sample\n          screenshot of your app. This is just a badge section, but displaying\n          an image using markdown and HTML. An image is provided to make it\n          easier to test sizing, but this image will not be used when you reuse\n          the code elsewhere.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"app-input\">\n          <h2>Input values</h2>\n\n          <form @submit.prevent.enter=\"submit\">\n            <fieldset name=\"links\">\n              <legend>Links</legend>\n\n              <TextInput\n                label=\"Source\"\n                v-model=\"imgSrc\"\n                placeholder=\"e.g. /sample.png\"\n                note=\"Local path or URL.\"\n                isRequired\n              />\n\n              <TextInput\n                label=\"Click target\"\n                v-model=\"linkTarget\"\n                placeholder=\"e.g. https://example.com\"\n                note=\"Local path or external URL. Such as docs/ or link to project site.\"\n              />\n            </fieldset>\n            <br />\n\n            <fieldset name=\"text\">\n              <legend>Text</legend>\n\n              <TextInput\n                label=\"Alt text\"\n                v-model=\"altText\"\n                placeholder=\"e.g. Sample screenshot\"\n                note=\"Fallback image text on broken link. If not set, the image path will be used\"\n              />\n              <br />\n\n              <TextInput\n                label=\"Title\"\n                v-model=\"imgTitle\"\n                note=\"Text to show on hover. If not set, then the alt text input's value will be used.\"\n              />\n            </fieldset>\n            <br />\n\n            <fieldset id=\"appearance\">\n              <legend>Appearance</legend>\n\n              <TextInput\n                label=\"Width\"\n                v-model=\"width\"\n                placeholder=\"e.g. 400\"\n                note=\"Measured in pixels, but no px symbol is needed. If you set width only, then height will default to 'auto', which works well on mobile and desktop.\"\n              />\n              <br />\n\n              <TextInput\n                label=\"Height\"\n                v-model=\"height\"\n                placeholder=\"e.g. 400\"\n                note=\"Warning: You probably don't need to set height. If you set height but not width, then you might get a squashed image on mobile view.\"\n              />\n            </fieldset>\n\n            <br />\n\n            <input class=\"btn\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </div>\n\n      <div class=\"col-6\">\n        <Results :result=\"result\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <Help :message=\"helpMessage\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport { stripLeadingSlash } from \"@/lib\";\n\nimport { SCREENSHOT } from \"@/constants/image\";\nimport { INITIAL_RESULT } from \"@/constants/text\";\n\nimport Help from \"@/components/Help.vue\";\nimport Results from \"@/components/Results.vue\";\nimport TextInput from \"@/components/TextInput.vue\";\n\nimport { mdImageWithLink } from \"@/core/markdown\";\nimport { mkHtmlImg } from \"@/core/images\";\n\nconst helpMessage = `\\\n<p>\n  Styling has been setup so that images in the preview pane will not\n  extend beyond the width of the preview area, even no width or a\n  large width has been set.\n</p>\n<p>\n  Tip: Pressing the <kbd>Enter</kbd> key after updating a text field\n  will also submit.\n</p>\n<p>\n  Setting <i>width</i> and <i>height</i> is optional, but this can\n  help in certain cases. For example, a screenshot or logo will be set\n  by GitHub to <i>100%</i> of the page width making it look large and\n  take up vertical space, so reduce height or width manually.\n</p>\n<p>\n  Setting height can also make sure the height of the tag is set\n  before the image loads, so it reserves the space - if the height is\n  larger than the original image though then the image will looked\n  stretched.\n</p>\n<p>\n  Warning: If you set height only to say 400, then the image in the\n  README.md will look fine on desktop but ends up looking distorted on\n  mobile.\n</p>`;\n\n// 'Image' is reserved in Vue so use alternative.\nexport default defineComponent({\n  name: \"ImageView\",\n  components: {\n    Help,\n    Results,\n    TextInput,\n  },\n  data() {\n    return {\n      ...SCREENSHOT,\n\n      result: INITIAL_RESULT,\n      helpMessage,\n    };\n  },\n  computed: {\n    altTextOut(): string {\n      return stripLeadingSlash(this.altText || this.imgSrc);\n    },\n    imgTitleOut(): string {\n      return stripLeadingSlash(this.imgTitle);\n    },\n  },\n  methods: {\n    submit() {\n      console.debug(\"Process inputs and render results\");\n\n      const htmlImg = mkHtmlImg(\n        this.imgSrc,\n        this.altTextOut,\n        this.imgTitleOut,\n        this.linkTarget,\n        this.width,\n        this.height\n      );\n\n      const mdImg = mdImageWithLink({\n        altText: this.altTextOut,\n        imageTarget: this.imgSrc,\n        linkTarget: this.linkTarget,\n        hoverTitle: this.imgTitleOut,\n      });\n\n      this.result = `\\\n_HTML image_\n\n<div align=\"center\">\n    ${htmlImg}\n</div>\n\n\n_Markdown image_\n\n<div align=\"center\">\n\n${mdImg}\n\n</div>\n      `;\n    },\n  },\n});\n</script>\n\n<style>\n/* Prevent markdown preview image from going way off the right. Using `scoped` doesn't work, but\nadding an explicit wrapping class helps scope this. */\n.app-results img {\n  max-width: 100%;\n}\n</style>\n","// Default for Image.vue.\nexport const SCREENSHOT = {\n  imgSrc: \"/sample.png\",\n  linkTarget: \"\",\n  altText: \"Sample screenshot\",\n  imgTitle: \"\",\n  width: \"400\",\n  height: \"\",\n};\n","/**\n * Images module.\n *\n * This was attempted using a Vue component instead of with templating. But\n * rendering proved an issue as the finished element was shown even inside of\n * `pre` and `code` tags.\n *\n * The indentation here is not smart because of the nested rendering, but, it\n * works well enough to use it. Maybe there is a function in the Markdown\n * library or similar to handle indenting.\n */\nexport function mkHtmlImg(\n  src: string,\n  alt: string,\n  title: string,\n  target = \"\",\n  width: string,\n  height: string\n) {\n  const htmlTitle = title ? ` title=\"${title}\"` : \"\",\n    htmlAltText = alt ? ` alt=\"${alt}\"` : \"\",\n    htmlWidth = width ? ` width=\"${width}\"` : \"\",\n    htmlHeight = height ? ` height=\"${height}\"` : \"\";\n\n  let htmlImg = `<img src=\"${src}\"${htmlAltText}${htmlTitle}${htmlWidth}${htmlHeight}>`;\n\n  if (target) {\n    htmlImg = `\\\n<a href=\"${target}\">\n    ${htmlImg}\n</a>`;\n  }\n\n  return htmlImg;\n}\n","\nimport { defineComponent } from \"vue\";\n\nimport { stripLeadingSlash } from \"@/lib\";\n\nimport { SCREENSHOT } from \"@/constants/image\";\nimport { INITIAL_RESULT } from \"@/constants/text\";\n\nimport Help from \"@/components/Help.vue\";\nimport Results from \"@/components/Results.vue\";\nimport TextInput from \"@/components/TextInput.vue\";\n\nimport { mdImageWithLink } from \"@/core/markdown\";\nimport { mkHtmlImg } from \"@/core/images\";\n\nconst helpMessage = `\\\n<p>\n  Styling has been setup so that images in the preview pane will not\n  extend beyond the width of the preview area, even no width or a\n  large width has been set.\n</p>\n<p>\n  Tip: Pressing the <kbd>Enter</kbd> key after updating a text field\n  will also submit.\n</p>\n<p>\n  Setting <i>width</i> and <i>height</i> is optional, but this can\n  help in certain cases. For example, a screenshot or logo will be set\n  by GitHub to <i>100%</i> of the page width making it look large and\n  take up vertical space, so reduce height or width manually.\n</p>\n<p>\n  Setting height can also make sure the height of the tag is set\n  before the image loads, so it reserves the space - if the height is\n  larger than the original image though then the image will looked\n  stretched.\n</p>\n<p>\n  Warning: If you set height only to say 400, then the image in the\n  README.md will look fine on desktop but ends up looking distorted on\n  mobile.\n</p>`;\n\n// 'Image' is reserved in Vue so use alternative.\nexport default defineComponent({\n  name: \"ImageView\",\n  components: {\n    Help,\n    Results,\n    TextInput,\n  },\n  data() {\n    return {\n      ...SCREENSHOT,\n\n      result: INITIAL_RESULT,\n      helpMessage,\n    };\n  },\n  computed: {\n    altTextOut(): string {\n      return stripLeadingSlash(this.altText || this.imgSrc);\n    },\n    imgTitleOut(): string {\n      return stripLeadingSlash(this.imgTitle);\n    },\n  },\n  methods: {\n    submit() {\n      console.debug(\"Process inputs and render results\");\n\n      const htmlImg = mkHtmlImg(\n        this.imgSrc,\n        this.altTextOut,\n        this.imgTitleOut,\n        this.linkTarget,\n        this.width,\n        this.height\n      );\n\n      const mdImg = mdImageWithLink({\n        altText: this.altTextOut,\n        imageTarget: this.imgSrc,\n        linkTarget: this.linkTarget,\n        hoverTitle: this.imgTitleOut,\n      });\n\n      this.result = `\\\n_HTML image_\n\n<div align=\"center\">\n    ${htmlImg}\n</div>\n\n\n_Markdown image_\n\n<div align=\"center\">\n\n${mdImg}\n\n</div>\n      `;\n    },\n  },\n});\n","import { render } from \"./Image.vue?vue&type=template&id=64016c48\"\nimport script from \"./Image.vue?vue&type=script&lang=ts\"\nexport * from \"./Image.vue?vue&type=script&lang=ts\"\n\nimport \"./Image.vue?vue&type=style&index=0&id=64016c48&lang=css\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}