{"version":3,"sources":["webpack:///./src/components/Code.vue","webpack:///./src/components/Code.vue?f6c3","webpack:///./src/components/Code.vue?e26e","webpack:///./src/components/TextInput.vue?6f20","webpack:///./src/components/TextInput.vue","webpack:///./src/components/TextInput.vue?b4e0","webpack:///./src/components/TextInput.vue?b18f","webpack:///./src/components/Results.vue","webpack:///./src/components/Results.vue?649b","webpack:///./src/components/Results.vue?6f49","webpack:///./src/lib.ts","webpack:///./src/views/PackageBadges.vue","webpack:///./src/core/packages.ts","webpack:///./src/views/PackageBadges.vue?6bdd","webpack:///./src/views/PackageBadges.vue?87b8","webpack:///./src/components/Help.vue","webpack:///./src/components/Help.vue?d82e","webpack:///./src/components/Help.vue?e1b3"],"names":["ref","class","code","name","props","type","String","required","methods","block","this","$refs","codeBlock","highlightBlock","highlight","render","for","slug","label","id","value","modelValue","placeholder","isRequired","disabled","$emit","$event","target","content","note","components","Markdown","Boolean","computed","__scopeId","result","Code","stripLeadingSlash","replace","slugify","values","join","toLowerCase","submit","pkgName","pkgType","checked","envEnabled","disabledClass","prodOption","envType","devOption","username","repoName","logo","logoColor","message","dependency","registry","logoAppearance","url","genericBadge","color","isLarge","nodeVersionBadge","repo","environment","altText","IS_LARGE","baseImageUrl","params","imageTarget","linkTarget","Node","Help","Results","TextInput","Dev","Prod","LogoDefault","console","debug","registryKey","dependencyBadge","Repo","envKey","lockedPkgBadge"],"mappings":"2KACE,eAAmE,YAA9D,eAAwD,QAAlDA,IAAI,YAAYC,MAAM,Y,eAAc,EAAAC,MAAI,O,yBCGtC,iBAAgB,CAC7BC,KAAM,OACNC,MAAO,CACLF,KAAM,CAAEG,KAAMC,OAAQC,UAAU,IAElCC,QAAS,CACP,YACE,MAAMC,EAAQC,KAAKC,MAAMC,UACzB,IAAKC,eAAeJ,KAGxB,UACEC,KAAKI,aAEP,UACEJ,KAAKI,eChBT,EAAOC,OAASA,EAED,U,kCCLf,W,+ICGyCd,MAAM,Y,SAapCA,MAAM,Q,sGAff,eAkBM,YAjBJ,eAEQ,SAFAe,IAAK,EAAAC,MAAI,C,8BACZ,EAAAC,OAAK,GAAe,EAAU,Y,iBAAtB,eAAiD,OAAjD,EAAyC,M,kCAGtD,eAQE,SAPCC,GAAI,EAAAF,KACLZ,KAAK,OACJe,MAAO,EAAAC,WACPC,YAAa,EAAAA,YACbf,SAAU,EAAAgB,WACVC,SAAU,EAAAA,SACN,QAAK,eAAE,EAAAC,MAAM,oBAAqBC,EAAOC,OAAOP,S,4DAG7B,EAAI,M,iBAA9B,eAEQ,QAFR,EAEQ,CADN,eAAqC,GAA1BQ,QAAS,EAAAC,MAAI,uB,sDCXf,iBAAgB,CAC7B1B,KAAM,YACN2B,WAAY,CACVC,WAAA,MAEF3B,MAAO,CACLc,MAAO,CAAEb,KAAMC,OAAQC,UAAU,GACjCc,WAAY,CAAEhB,KAAMC,OAAQC,UAAU,GACtCe,YAAa,CAAEjB,KAAMC,OAAQC,UAAU,GACvCgB,WAAY,CAAElB,KAAM2B,QAASzB,UAAU,GACvCiB,SAAU,CAAEnB,KAAM2B,QAASzB,UAAU,GACrCsB,KAAM,CAAExB,KAAMC,OAAQC,UAAU,IAElC0B,SAAU,CACR,OACE,OAAO,eAAQ,OAAQvB,KAAKQ,MAAOR,KAAKW,gB,UChB9C,EAAON,OAASA,EAChB,EAAOmB,UAAY,kBAEJ,U,2DCNRjC,MAAM,e,EACT,eAAsB,UAAlB,iBAAa,G,EAGf,eAAgB,UAAZ,WAAO,G,EAQX,eAAa,UAAT,QAAI,G,4GAZZ,eAgBM,MAhBN,EAgBM,CAfJ,EAEA,eAMM,YALJ,EAIA,eAAuC,GAA5B2B,QAAS,EAAAO,QAAM,sBAG5B,eAIM,YAHJ,EAEA,eAAuB,GAAhBjC,KAAM,EAAAiC,QAAM,qB,4BCVV,iBAAgB,CAC7BhC,KAAM,UACN2B,WAAY,CACVC,WAAA,KACAK,OAAA,MAEFhC,MAAO,CACL+B,OAAQ7B,UCVZ,EAAOS,OAASA,EAED,U,oCCDR,SAASsB,EAAkBjB,GAChC,OAAOA,EAAMkB,QAAQ,OAAQ,IAGxB,SAASC,KAAWC,GACzB,MAAMpB,EAAQoB,EAAOC,KAAK,KAE1B,OAAOrB,EACJkB,QAAQ,aAAc,IACtBI,cACAJ,QAAQ,eAAgB,IACxBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,KAhBpB,qE,kECCOrC,MAAM,uB,EACT,eASM,OATDA,MAAM,OAAK,CACd,eAOM,OAPDA,MAAM,UAAQ,CACjB,eAAuB,UAAnB,kBAEJ,eAGI,SAHD,2H,MAOFA,MAAM,O,GACJA,MAAM,S,GACJA,MAAM,a,EACT,eAAqB,UAAjB,gBAAY,G,GAGJE,KAAK,W,EACb,eAAiC,cAAzB,oBAAgB,G,EAQxB,eAAM,mB,EAGJ,eAAmB,YAAb,UAAM,G,EAUZ,eAAyC,SAAlCa,IAAI,UAAS,iBAAa,G,EASjC,eAAoC,SAA7BA,IAAI,QAAO,cAAU,G,EAS5B,eAAyC,SAAlCA,IAAI,QAAO,mBAAe,G,EAEnC,eAAM,mB,EAGJ,eAA0B,YAApB,iBAAa,G,GAWZA,IAAI,Y,GAUJA,IAAI,W,EAGf,eAAM,mB,GAEIb,KAAK,U,EACb,eAA4B,cAApB,eAAW,G,EAGnB,eAAM,mB,EAIR,eAAM,mB,GAEIA,KAAK,c,EACb,eAAyC,cAAjC,4BAAwB,G,EAiBlC,eAAM,mB,EAEN,eAAkD,SAA3CF,MAAM,MAAMI,KAAK,SAASe,MAAM,U,YAKxCnB,MAAM,S,GAKRA,MAAM,O,GACJA,MAAM,U,yIAlIf,eAsIM,MAtIN,EAsIM,CArIJ,EAWA,eAmHM,MAnHN,EAmHM,CAlHJ,eA6GM,MA7GN,EA6GM,CA5GJ,eA2GM,MA3GN,EA2GM,CA1GJ,EAEA,eAuGO,QAvGA,SAAM,qCAAgB,EAAA0C,QAAA,EAAAA,UAAA,GAAM,e,CACjC,eAoEW,WApEX,EAoEW,CAnET,EAEA,eAKE,GAJAzB,MAAM,O,WACG,EAAA0B,Q,qCAAA,EAAAA,QAAO,GAChBtB,YAAY,WACZC,WAAA,I,uBAEF,EAEA,eA8BM,YA7BJ,E,eAEA,eAOE,SANAlB,KAAK,QACLc,GAAG,SACHhB,KAAK,eACLiB,MAAM,S,qCACG,EAAAyB,QAAO,GAChBC,QAAA,I,mBADS,EAAAD,WAGX,E,eAEA,eAME,SALAxC,KAAK,QACLc,GAAG,OACHhB,KAAK,eACLiB,MAAM,O,qCACG,EAAAyB,QAAO,I,mBAAP,EAAAA,WAEX,E,eAEA,eAME,SALAxC,KAAK,QACLc,GAAG,OACHhB,KAAK,eACLiB,MAAM,O,qCACG,EAAAyB,QAAO,I,mBAAP,EAAAA,WAEX,IAEF,EAEA,eAuBM,OAvBA5C,MAAQ,EAAA8C,WAA6B,GAAhB,EAAAC,e,CACzB,E,eAEA,eAQE,SAPA3C,KAAK,QACLc,GAAG,WACHhB,KAAK,WACJiB,MAAO,EAAA6B,W,qCACC,EAAAC,QAAO,GACf1B,UAAW,EAAAuB,WACZD,QAAA,I,sCAFS,EAAAI,WAIX,eAA8C,QAA9C,EAA8C,eAArB,EAAAD,YAAU,G,eAEnC,eAOE,SANA5C,KAAK,QACLc,GAAG,UACHhB,KAAK,WACJiB,MAAO,EAAA+B,U,qCACC,EAAAD,QAAO,GACf1B,UAAW,EAAAuB,Y,sCADH,EAAAG,WAGX,eAA4C,QAA5C,EAA4C,eAApB,EAAAC,WAAS,I,KAGrC,EAEA,eAOW,WAPX,EAOW,CANT,EAEA,eAAiD,GAAtCjC,MAAM,W,WAAoB,EAAAkC,S,qCAAA,EAAAA,SAAQ,I,uBAC7C,EAEA,eAAkD,GAAvClC,MAAM,Y,WAAqB,EAAAmC,S,qCAAA,EAAAA,SAAQ,I,yBAEhD,EAEA,eAiBW,WAjBX,EAiBW,CAhBT,EACA,eAKE,GAJAnC,MAAM,O,WACG,EAAAoC,K,qCAAA,EAAAA,KAAI,GACbhC,YAAY,cACZO,KAAK,mL,uBAGP,eAOE,GANAX,MAAM,a,WACG,EAAAqC,U,uCAAA,EAAAA,UAAS,GACjB/B,SAAmB,KAAT,EAAA8B,KACVrD,MAAgB,KAAT,EAAAqD,KAAc,EAAAN,cAAgB,GACtC1B,YAAY,gCACZO,KAAK,8L,4CAGT,EAEA,G,QAKN,eAEM,MAFN,EAEM,CADJ,eAA4B,GAAlBM,OAAQ,EAAAA,QAAM,uBAI5B,eAIM,MAJN,EAIM,CAHJ,eAEM,MAFN,EAEM,CADJ,eAAwB,GAAjBqB,QAAS,EAAA3B,MAAI,0B,4HC/FrB,SAAS4B,EACdtD,EACAuD,EACAC,GAEA,MAAMC,EAAM,GAAGF,KAAYvD,IAE3B,OAAO,OAAA0D,EAAA,MACL,OAAkB3C,MAClBf,EACA,OAAkB2D,MAClB,OAAkBC,QAClBH,EACAD,EAAeL,KACfK,EAAeJ,WAgBZ,SAASS,EACdC,EACArB,EACAe,EACAO,GAEA,MAAMC,EAAU,aAAavB,EAE7Be,EAAeI,QAAU,OAAmBK,SAC5C,MAAMC,EAAe,eAAqBJ,EAAMrB,EAASsB,GACvDI,EAAS,eAAgBX,GACzBY,EAAc,eAASF,EAAcC,GAEjCE,EAAa,GAAG,OAASC,QAAQ7B,IAEvC,OAAO,eAAgB,CACrBuB,UACAI,cACAC,e,gBCxEJ,MAAM3C,EAAO,iUAME,qBAAgB,CAC7B1B,KAAM,gBACN2B,WAAY,CACV4C,OAAA,KACAC,UAAA,KACAC,YAAA,MAEF,OACE,MAAO,CACLhC,QAAS,MACTC,QAAS,OAETM,UAAW,OAAY,OAAY0B,KACnC5B,WAAY,OAAY,OAAY6B,MACpC5B,QAAS,OAAY,OAAY4B,MAEjC1B,SAAU,gBACVC,SAAU,kBACVC,KAAM,GACNC,UAAW,OAAMwB,YAEjB5C,OAAQ,iCACRN,KAAMA,EAENmB,cAAe,kBAGnBf,SAAU,CACR,aACE,MAAwB,SAAjBvB,KAAKmC,UAGhBrC,QAAS,CACP,SACEwE,QAAQC,MAAM,qCAEd,MAAMtB,EAAiB,CAAEL,KAAM5C,KAAK4C,KAAMC,UAAW7C,KAAK6C,WAEpD2B,EAAcxE,KAAKmC,QACvBa,EAAW,OAASwB,GAEhBC,EAAkBzB,EACpBD,EAAW/C,KAAKkC,QAASc,EAAUC,GACnC,GAEEM,EAAO,IAAImB,EAAA,KAAK1E,KAAK0C,SAAU1C,KAAK2C,UACpCgC,EAAS3E,KAAKwC,QAClBgB,EAAc,OAAYmB,GAEtBC,EACJ5B,IAAa,OAASe,KAClBT,EAAiBC,EAAMvD,KAAKkC,QAASe,EAAgBO,GACrD,GAENxD,KAAKyB,OAAS,GAClBgD,QAEAG,kBCzEF,EAAOvE,OAASA,EAED,gB,kFCJRd,MAAM,a,EACT,eAAc,UAAV,SAAK,G,mFADX,eAKM,MALN,EAKM,CAJJ,EACA,eAEI,UADF,eAAwC,GAA7B2B,QAAS,EAAA4B,SAAO,wB,gBCAlB,iBAAgB,CAC7BrD,KAAM,OACN2B,WAAY,CACVC,WAAA,MAEF3B,MAAO,CACLoD,QAASlD,UCPb,EAAOS,OAASA,EAED","file":"js/package.f766dde9.js","sourcesContent":["<template>\n  <pre><code ref=\"codeBlock\" class=\"markdown\">{{ code }}</code></pre>\n</template>\n\n<script lang=\"ts\">\nimport hljs from \"highlight.js\";\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"Code\",\n  props: {\n    code: { type: String, required: true },\n  },\n  methods: {\n    highlight() {\n      const block = this.$refs.codeBlock as HTMLElement;\n      hljs.highlightBlock(block);\n    },\n  },\n  mounted() {\n    this.highlight();\n  },\n  updated() {\n    this.highlight();\n  },\n});\n</script>\n","\nimport hljs from \"highlight.js\";\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"Code\",\n  props: {\n    code: { type: String, required: true },\n  },\n  methods: {\n    highlight() {\n      const block = this.$refs.codeBlock as HTMLElement;\n      hljs.highlightBlock(block);\n    },\n  },\n  mounted() {\n    this.highlight();\n  },\n  updated() {\n    this.highlight();\n  },\n});\n","import { render } from \"./Code.vue?vue&type=template&id=78d3f536\"\nimport script from \"./Code.vue?vue&type=script&lang=ts\"\nexport * from \"./Code.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./TextInput.vue?vue&type=style&index=0&id=de2a2f90&scoped=true&lang=css\"","<template>\n  <div>\n    <label :for=\"slug\">\n      {{ label }}<span v-if=\"isRequired\" class=\"required\">*</span>\n    </label>\n\n    <input\n      :id=\"slug\"\n      type=\"text\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      :required=\"isRequired\"\n      :disabled=\"disabled\"\n      v-on:input=\"$emit('update:modelValue', $event.target.value)\"\n    />\n\n    <small class=\"note\" v-if=\"note\">\n      <Markdown :content=\"note\"></Markdown>\n    </small>\n  </div>\n</template>\n\n<style scoped>\nlabel {\n  padding-right: 0.5em;\n}\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport { slugify } from \"@/lib\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"TextInput\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: String, required: true },\n    placeholder: { type: String, required: false },\n    isRequired: { type: Boolean, required: false },\n    disabled: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"text\", this.label, this.modelValue);\n    },\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nimport { slugify } from \"@/lib\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"TextInput\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: String, required: true },\n    placeholder: { type: String, required: false },\n    isRequired: { type: Boolean, required: false },\n    disabled: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"text\", this.label, this.modelValue);\n    },\n  },\n});\n","import { render } from \"./TextInput.vue?vue&type=template&id=de2a2f90&scoped=true\"\nimport script from \"./TextInput.vue?vue&type=script&lang=ts\"\nexport * from \"./TextInput.vue?vue&type=script&lang=ts\"\n\nimport \"./TextInput.vue?vue&type=style&index=0&id=de2a2f90&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-de2a2f90\"\n\nexport default script","<template>\n  <!-- Badge generator output pane -->\n  <div class=\"app-results\">\n    <h2>Output values</h2>\n\n    <div>\n      <h3>Preview</h3>\n      <!-- Make sure to not add result on a new line otherwise it will indent and format. -->\n      <!-- Make sure to use :source since {{ result }} as inner text will fail to update on UI\n        changes. -->\n      <Markdown :content=\"result\"></Markdown>\n    </div>\n\n    <div>\n      <h3>Code</h3>\n\n      <Code :code=\"result\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport Code from \"@/components/Code.vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Results\",\n  components: {\n    Markdown,\n    Code,\n  },\n  props: {\n    result: String,\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nimport Code from \"@/components/Code.vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Results\",\n  components: {\n    Markdown,\n    Code,\n  },\n  props: {\n    result: String,\n  },\n});\n","import { render } from \"./Results.vue?vue&type=template&id=4a98d89a\"\nimport script from \"./Results.vue?vue&type=script&lang=ts\"\nexport * from \"./Results.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","/**\n * Lib helper functions for Vue app.\n */\n\nexport function stripLeadingSlash(value: string) {\n  return value.replace(/^\\/+/, \"\");\n}\n\nexport function slugify(...values: string[]) {\n  const value = values.join(\"-\");\n\n  return value\n    .replace(/^\\s+|\\s+$/g, \"\") // Trim\n    .toLowerCase()\n    .replace(/[^a-z0-9 -]/g, \"\")\n    .replace(/\\s+/g, \"-\") // Collapse whitespace\n    .replace(/-+/g, \"-\"); // Collapse dashes\n}\n","<template>\n  <div class=\"badges container-lg\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h1>Package badges</h1>\n\n        <p>\n          Show your project's dependencies as badges in your docs, including an\n          external link to the package in a registry.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"app-input\">\n          <h2>Input values</h2>\n\n          <form @submit.prevent.enter=\"submit\">\n            <fieldset name=\"package\">\n              <legend>Package metadata</legend>\n\n              <TextInput\n                label=\"Name\"\n                v-model=\"pkgName\"\n                placeholder=\"e.g. vue\"\n                isRequired\n              />\n              <br />\n\n              <div>\n                <span>Type: </span>\n\n                <input\n                  type=\"radio\"\n                  id=\"python\"\n                  name=\"package-type\"\n                  value=\"Python\"\n                  v-model=\"pkgType\"\n                  checked\n                />\n                <label for=\"python\">Python (PyPI)</label>\n\n                <input\n                  type=\"radio\"\n                  id=\"node\"\n                  name=\"package-type\"\n                  value=\"Node\"\n                  v-model=\"pkgType\"\n                />\n                <label for=\"node\">Node (NPM)</label>\n\n                <input\n                  type=\"radio\"\n                  id=\"ruby\"\n                  name=\"package-type\"\n                  value=\"Ruby\"\n                  v-model=\"pkgType\"\n                />\n                <label for=\"ruby\">Ruby (Rubygems)</label>\n              </div>\n              <br />\n\n              <div :class=\"!envEnabled ? disabledClass : ''\">\n                <span>Environment: </span>\n\n                <input\n                  type=\"radio\"\n                  id=\"env-prod\"\n                  name=\"env-type\"\n                  :value=\"prodOption\"\n                  v-model=\"envType\"\n                  :disabled=\"!envEnabled\"\n                  checked\n                />\n                <label for=\"env-prod\">{{ prodOption }}</label>\n\n                <input\n                  type=\"radio\"\n                  id=\"env-dev\"\n                  name=\"env-type\"\n                  :value=\"devOption\"\n                  v-model=\"envType\"\n                  :disabled=\"!envEnabled\"\n                />\n                <label for=\"env-dev\">{{ devOption }}</label>\n              </div>\n            </fieldset>\n            <br />\n\n            <fieldset name=\"ghRepo\">\n              <legend>GitHub repo</legend>\n\n              <TextInput label=\"Username\" v-model=\"username\" />\n              <br />\n\n              <TextInput label=\"Repo name\" v-model=\"repoName\" />\n            </fieldset>\n            <br />\n\n            <fieldset name=\"appearance\">\n              <legend>Dynamic badge appearance</legend>\n              <TextInput\n                label=\"Logo\"\n                v-model=\"logo\"\n                placeholder=\"e.g. vue.js\"\n                note=\"Supports values like `dependabot`, `discord` and `npm`. And hundreds of logos from [SimpleIcons](https://simpleicons.org/) such as `python`, `node.js` and `visual-studio-code`\"\n              />\n\n              <TextInput\n                label=\"Logo color\"\n                v-model=\"logoColor\"\n                :disabled=\"logo === ''\"\n                :class=\"logo === '' ? disabledClass : ''\"\n                placeholder=\"e.g. white or #fff or #ffffff\"\n                note=\"You can override with your own color, or leave blank to use the badge's own rich colors (these are often poor for reading on a dark background, while `white` is bland but most readable).\"\n              />\n            </fieldset>\n            <br />\n\n            <input class=\"btn\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </div>\n\n      <div class=\"col-6\">\n        <Results :result=\"result\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <Help :message=\"note\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport Help from \"@/components/Help.vue\";\nimport Results from \"@/components/Results.vue\";\nimport TextInput from \"@/components/TextInput.vue\";\n\nimport { REGISTRY } from \"@/constants/urls\";\nimport { COLOR } from \"@/constants/appearance\";\nimport { dependency, nodeVersionBadge } from \"@/core/packages\";\nimport { Repo } from \"@/core/Repo\";\nimport { ENVIRONMENT } from \"@/core/shieldsApi\";\n\nconst note = `\n- Environent setting is for Node packages only and must match whether the package is in \"dependencies\" or \"devDependencies\".\n- Optionally set Repo fields to your _own_ project, so the badge dynamically pick up version number of the package chosen above.\n- Only NPM is currently supported for the dynamic package.\n`;\n\nexport default defineComponent({\n  name: \"PackageBadges\",\n  components: {\n    Help,\n    Results,\n    TextInput,\n  },\n  data() {\n    return {\n      pkgName: \"vue\",\n      pkgType: \"Node\",\n\n      devOption: ENVIRONMENT[ENVIRONMENT.Dev],\n      prodOption: ENVIRONMENT[ENVIRONMENT.Prod],\n      envType: ENVIRONMENT[ENVIRONMENT.Prod],\n\n      username: \"MichaelCurrin\",\n      repoName: \"badge-generator\",\n      logo: \"\",\n      logoColor: COLOR.LogoDefault,\n\n      result: \"_Your output will appear here_\",\n      note: note,\n\n      disabledClass: \"disabled-text\",\n    };\n  },\n  computed: {\n    envEnabled(): boolean {\n      return this.pkgType === \"Node\";\n    },\n  },\n  methods: {\n    submit() {\n      console.debug(\"Process inputs and render results\");\n\n      const logoAppearance = { logo: this.logo, logoColor: this.logoColor };\n\n      const registryKey = this.pkgType as keyof typeof REGISTRY,\n        registry = REGISTRY[registryKey];\n\n      const dependencyBadge = registry\n        ? dependency(this.pkgName, registry, logoAppearance)\n        : \"\";\n\n      const repo = new Repo(this.username, this.repoName);\n      const envKey = this.envType as keyof typeof ENVIRONMENT,\n        environment = ENVIRONMENT[envKey];\n\n      const lockedPkgBadge =\n        registry === REGISTRY.Node\n          ? nodeVersionBadge(repo, this.pkgName, logoAppearance, environment)\n          : \"\";\n\n      this.result = `\\\n${dependencyBadge}\n\n${lockedPkgBadge}\n        `;\n    },\n  },\n});\n</script>\n","/**\n * Package badges module.\n */\nimport {\n  GO_MODULE_SHIELD,\n  NODE_VERSION_BADGE,\n  STATIC_DEPENDENCY,\n} from \"@/constants/badgeValues\";\nimport { REGISTRY, SHIELDS_API } from \"@/constants/urls\";\nimport { buildUrl } from \"./badges\";\nimport { genericBadge } from \"./genericBadge\";\nimport { mdImageWithLink } from \"./markdown\";\nimport { Repo } from \"./Repo\";\nimport {\n  ENVIRONMENT,\n  logoQueryParams,\n  nodePkgJsonShieldUrl,\n} from \"./shieldsApi\";\nimport { TLogoAppearance } from \"./shieldsApi.d\";\n\n// TODO: Rename function.\n/**\n * Static dependency badge.\n *\n * A generic badge which can describe any project package dependency, for registries supported by\n * this app. The badge is flat, so it will display info even for a dependency that does not exist on\n * the registry.\n *\n * The name input might be \"requests\" for Python or \"vue\" for Node.\n *\n * The version might be like '17.x' or '>=17' or '17-19'. This is useful if there is no wait to\n * infer the version or version range automatically from files in the repo, or you just want more\n * control at the cost of manual updates when ever it changes.\n *\n * TODO: Make a variation that accepts a version number for `foo >= 1` instead of using just\n * `dependency: foo`. This is already supported on the Generic Page but it can be easier here.\n */\nexport function dependency(\n  name: string,\n  registry: REGISTRY,\n  logoAppearance: TLogoAppearance\n) {\n  const url = `${registry}/${name}`;\n\n  return genericBadge(\n    STATIC_DEPENDENCY.label!,\n    name,\n    STATIC_DEPENDENCY.color!,\n    STATIC_DEPENDENCY.isLarge,\n    url,\n    logoAppearance.logo,\n    logoAppearance.logoColor\n  );\n}\n\n/**\n * Dynamic Node package badge.\n *\n * The badge will dynamically display the locked version number of a named package which is set in\n * your repo's package.json file.\n *\n * Note - the badge URL needs something added to work for dev dependencies. I'm happy to not support\n * that now.\n *\n * Shields.io does Pipenv lock files, but not requirements.txt file, it seems. And not Gemfile\n * either.\n */\nexport function nodeVersionBadge(\n  repo: Repo,\n  pkgName: string,\n  logoAppearance: TLogoAppearance,\n  environment: ENVIRONMENT\n) {\n  const altText = `Package - ${pkgName}`;\n\n  logoAppearance.isLarge = NODE_VERSION_BADGE.IS_LARGE;\n  const baseImageUrl = nodePkgJsonShieldUrl(repo, pkgName, environment),\n    params = logoQueryParams(logoAppearance),\n    imageTarget = buildUrl(baseImageUrl, params);\n\n  const linkTarget = `${REGISTRY.Node}/${pkgName}`;\n\n  return mdImageWithLink({\n    altText,\n    imageTarget,\n    linkTarget,\n  });\n}\n\n// TODO: Add to Packages view or Repo view.\n// TODO: Accept Repo type.\n/**\n * Return a Go badge that reflects the Go version in a repo's go.mod file.\n */\nexport function goVersionBadge(username: string, repoName: string) {\n  const baseImageUrl = `${SHIELDS_API.GO_MODULE}/${username}/${repoName}`;\n  const params = logoQueryParams(GO_MODULE_SHIELD);\n  const imageTarget = buildUrl(baseImageUrl, params);\n\n  const { altText, linkTarget } = GO_MODULE_SHIELD;\n\n  return mdImageWithLink({\n    altText,\n    imageTarget,\n    linkTarget,\n  });\n}\n","\nimport { defineComponent } from \"vue\";\n\nimport Help from \"@/components/Help.vue\";\nimport Results from \"@/components/Results.vue\";\nimport TextInput from \"@/components/TextInput.vue\";\n\nimport { REGISTRY } from \"@/constants/urls\";\nimport { COLOR } from \"@/constants/appearance\";\nimport { dependency, nodeVersionBadge } from \"@/core/packages\";\nimport { Repo } from \"@/core/Repo\";\nimport { ENVIRONMENT } from \"@/core/shieldsApi\";\n\nconst note = `\n- Environent setting is for Node packages only and must match whether the package is in \"dependencies\" or \"devDependencies\".\n- Optionally set Repo fields to your _own_ project, so the badge dynamically pick up version number of the package chosen above.\n- Only NPM is currently supported for the dynamic package.\n`;\n\nexport default defineComponent({\n  name: \"PackageBadges\",\n  components: {\n    Help,\n    Results,\n    TextInput,\n  },\n  data() {\n    return {\n      pkgName: \"vue\",\n      pkgType: \"Node\",\n\n      devOption: ENVIRONMENT[ENVIRONMENT.Dev],\n      prodOption: ENVIRONMENT[ENVIRONMENT.Prod],\n      envType: ENVIRONMENT[ENVIRONMENT.Prod],\n\n      username: \"MichaelCurrin\",\n      repoName: \"badge-generator\",\n      logo: \"\",\n      logoColor: COLOR.LogoDefault,\n\n      result: \"_Your output will appear here_\",\n      note: note,\n\n      disabledClass: \"disabled-text\",\n    };\n  },\n  computed: {\n    envEnabled(): boolean {\n      return this.pkgType === \"Node\";\n    },\n  },\n  methods: {\n    submit() {\n      console.debug(\"Process inputs and render results\");\n\n      const logoAppearance = { logo: this.logo, logoColor: this.logoColor };\n\n      const registryKey = this.pkgType as keyof typeof REGISTRY,\n        registry = REGISTRY[registryKey];\n\n      const dependencyBadge = registry\n        ? dependency(this.pkgName, registry, logoAppearance)\n        : \"\";\n\n      const repo = new Repo(this.username, this.repoName);\n      const envKey = this.envType as keyof typeof ENVIRONMENT,\n        environment = ENVIRONMENT[envKey];\n\n      const lockedPkgBadge =\n        registry === REGISTRY.Node\n          ? nodeVersionBadge(repo, this.pkgName, logoAppearance, environment)\n          : \"\";\n\n      this.result = `\\\n${dependencyBadge}\n\n${lockedPkgBadge}\n        `;\n    },\n  },\n});\n","import { render } from \"./PackageBadges.vue?vue&type=template&id=3c9fe958\"\nimport script from \"./PackageBadges.vue?vue&type=script&lang=ts\"\nexport * from \"./PackageBadges.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"app-notes\">\n    <h2>Notes</h2>\n    <p>\n      <Markdown :content=\"message\"></Markdown>\n    </p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Help\",\n  components: {\n    Markdown,\n  },\n  props: {\n    message: String,\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"Help\",\n  components: {\n    Markdown,\n  },\n  props: {\n    message: String,\n  },\n});\n","import { render } from \"./Help.vue?vue&type=template&id=167e31f7\"\nimport script from \"./Help.vue?vue&type=script&lang=ts\"\nexport * from \"./Help.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}